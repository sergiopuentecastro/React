{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGif.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","some","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","id","images","downsized_medium","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","elm","idx","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAElC,EAAoCC,mBAAS,WAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,mCCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,MAAOD,EAAIC,MACXC,GAAIF,EAAIE,GACRV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEL,SAASO,EAAYC,GAEhC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAMd,IAAKiB,IAAKH,EAAML,QAChC,4BAAIK,EAAML,WCHP,SAASS,EAAT,GAAgC,IAAbpB,EAAY,EAAZA,SAE9B,ECHuB,SAACA,GAExB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAC,GACFH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGtB,CAACrB,IAEGsB,EDdmBK,CAAY3B,GAA9BO,EAAR,EAAQA,KAAMc,EAAd,EAAcA,QAOd,OACI,qCACI,6BAAKrB,IACJqB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SAEQV,EAAKE,KAAI,SAACmB,EAAKC,GAAN,OACL,cAACd,EAAD,eAA2Ba,GAATC,WEhB3B,SAASC,IAEpB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAMA,OACI,gCACI,8CACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWtB,KAAI,SAACmB,EAAKC,GAAN,OACX,cAACT,EAAD,CAASpB,SAAU4B,GAAUC,W,MCfrDG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.e3496285.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function AddCategory({ setCategories }) {\n\n    const [inputValue, setInputValue] = useState('Escribe')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (inputValue.trim().length > 2) {\n            setCategories(some => [inputValue, ...some])\n            setInputValue('')\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit} >\n            <input type='text' value={inputValue} onChange={handleInputChange} />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=uqiMKRJBRZcn6E06APgg5ZKfQpd3IykI`\n    const resp = await fetch(url)\n    const { data } = await resp.json()\n    const gifs = data.map(img => {\n        return {\n            title: img.title,\n            id: img.id,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs\n}","import React from 'react'\n\nexport default function GifGridItem(props) {\n\n    return (\n        <div className='card animate__animated animate__bounce' >\n            <img src={props.url} alt={props.title} />\n            <p>{props.title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGif } from '../hooks/useFetchGif'\nimport GifGridItem from './GifGridItem'\n\nexport default function GifGrid({ category }) {\n\n    const { data, loading } = useFetchGif(category)\n\n    // useEffect(() => {\n    //     getGifs(category)\n    //         .then(setImages)\n    // }, [category])\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p>...Loading</p>}\n            <div className='card-grid' >\n                {\n                    data.map((elm, idx) => (\n                        <GifGridItem key={idx} {...elm} />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGif = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [category])\n\n    return state\n\n}","import React, { useState } from 'react'\nimport AddCategory from './AddCategory'\nimport GifGrid from './GifGrid'\n\nexport default function GifExpertApp() {\n\n    const [categories, setCategories] = useState(['One punch'])\n\n    // const handleAdd = () => {\n    //     setCategories(['Pokemon', ...categories])\n    // }\n\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map((elm, idx) => (\n                        <GifGrid category={elm} key={idx} />\n                    ))\n                }\n            </ol>\n        </div>\n\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}